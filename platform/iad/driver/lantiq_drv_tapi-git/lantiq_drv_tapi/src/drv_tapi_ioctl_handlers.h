#ifndef DRV_TAPI_IOCTL_HANDLERS_H
#define DRV_TAPI_IOCTL_HANDLERS_H
/******************************************************************************

                              Copyright (c) 2014
                            Lantiq Deutschland GmbH

  For licensing information, see the file 'LICENSE' in the root folder of
  this software module.

******************************************************************************/

/**
   \file drv_tapi_ioctl_handlers.h
      This file contains the implementation of the TAPI ioctl handling.

   \remarks
      This file contains the automatically generated code, please be careful
      during editing.
*/

/* ============================= */
/* Macros & Definitions          */
/* ============================= */

/**
   Retrieve function offset of low-level handler
   \remarks
      macro 'offsetof' should not be used because
      that implementation do not doing type casting
      as result allowed check for correct handler prototype
*/
#define TAPI_LL_HANDLER(member) \
   /*lint -save -esym(413,unknown-name) */ \
   (&((IFX_TAPI_DRV_CTX_t*)0)->member) \
   /*lint -restore */

/**
   Check that function pointer store offset of low-level handler
   instead of direct address
*/
#define TAPI_IS_LL_HANDLER(handler) \
   ((handler).nOffset < (IFX_uintptr_t) sizeof (IFX_TAPI_DRV_CTX_t))

#if 1
   /** retrieve handle to the low-level function
      \remarks
         realization for CPU which do not like unaligned memory access */
   #define TAPI_LL_HANDLER_GET(drv_ctx, handler) \
   /*lint -save -e155 */ \
   ({ \
      TAPI_Handler_t f; \
      IFX_uint8_t *p = (IFX_uint8_t *)(drv_ctx); \
      p+= (handler).nOffset; \
      memcpy (&f, p, sizeof (f)); \
      f; \
   }) \
   /*lint -restore */
#else
   /** retrieve handle to the low-level function
      \remarks
         more simple realization for non strict CPU */
   #define TAPI_LL_HANDLER_GET(drv_ctx, handler) \
      *(TAPI_Handler_t *)((IFX_uint8_t *)(drv_ctx) + (handler).nOffset)
#endif

/** empty declaration of TAPI handler */
/* GHS: TAPI_IOC_CTX_NONE, TAPI_ARG_NONE instead of 0, 0 to get rid of
   warning #188-D: enumerated type mixed with another type */
#define TAPI_HANDLER_UNSUPPORTED \
   TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_NONE, 0, IFX_NULL)

#ifdef DEBUG
   /** prepare entry for TAPI handler */
   #define TAPI_HANDLER_ADD(ctx, arg_kind, state, fnc) \
      /*lint -save -e{708, 69, 651} */ \
      { ctx, arg_kind, state, 0, {(fnc)}, #fnc, __LINE__ } \
      /*lint -restore */
#else /* DEBUG */
   /** prepare entry for TAPI handler */
   #define TAPI_HANDLER_ADD(ctx, arg_kind, state, fnc) \
      /*lint -save -e{708, 69, 651} */ \
      { ctx, arg_kind, state, 0, {(fnc)} } \
      /*lint -restore */
#endif /* DEBUG */

/** prepare entry for allowed TAPI handler prototype
   \remarks
      extra lever required to expand macro '__LINE__'
*/
#define __HANDLER_ALLOW(ptr, name, args) \
   __HANDLER_ALLOW__(ptr, name, args)

/** prepare entry for allowed TAPI handler prototype */
#define __HANDLER_ALLOW__(ptr, name, args) \
   /*lint -save -esym(754, p ## name) */ \
   IFX_int32_t (ptr p ## name)args \
   /*lint -restore */

/** prepare entry for allowed TAPI high-level handler prototype
    with no context dependence */
#define TAPI_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (*, __LINE__, (arg_type))

/** prepare entry for allowed TAPI high-level handler prototype
    with driver context */
#define TAPI_DRV_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (*, __LINE__, (IFX_TAPI_DRV_CTX_t*, arg_type))

/** prepare entry for allowed TAPI high-level handler prototype
    with device context */
#define TAPI_DEV_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (*, __LINE__, (TAPI_DEV*, arg_type))

/** prepare entry for allowed TAPI high-level handler prototype
    with channel context */
#define TAPI_CH_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (*, __LINE__, (TAPI_CHANNEL*, arg_type))

/** prepare entry for allowed TAPI low-level handler prototype
    with channel context */
#define TAPI_LL_CH_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (**,  __LINE__, (IFX_TAPI_LL_CH_t *, arg_type))

/** prepare entry for allowed TAPI low-level handler prototype
    with device context */
#define TAPI_LL_DEV_HANDLER_ALLOW(arg_type) \
   __HANDLER_ALLOW (**, __LINE__, (IFX_TAPI_LL_DEV_t *, arg_type))

/** TAPI device state do not requested */
#define TAPI_DS_NONE    0x0000
/** TAPI device initialization requested */
#define TAPI_DS_INIT    0x0001

/* ============================= */
/* Type definition               */
/* ============================= */

/**
   TAPI IOCtl handler declarations

   \remarks
      !!!IMPORTANT!!!
      Never touch that data between 'IOCTL_HANDLER_TYPES_START'
        and 'IOCTL_HANDLER_TYPES_END' and IOCTL_QOS_HANDLER_TYPES_START
        and 'IOCTL_QOS_HANDLER_TYPES_END' directly.
      Use 'drv_tapi_io.xml' and 'drv_tapi_qos_io.xml'
         with 'make ioctl' instead!
*/
typedef union {
   /** common access to the memory */
   IFX_void_t  *p;
   /** common access for handlers without argument */
   IFX_int32_t (*pNone)(void);
   /** common access for handlers with pointer argument */
   IFX_int32_t (*pPtr)(IFX_void_t*);
   /** common access for handlers with integer argument */
   IFX_int32_t (*pInt)(IFX_uint32_t);
   /** common access for handlers with context and integer argument */
   IFX_int32_t (*pPtrInt)(IFX_void_t*, IFX_uint32_t);
   /** common access for handlers with context and pointer argument */
   IFX_int32_t (*pPtrPtr)(IFX_void_t*, IFX_void_t*);
   /** access to the low-level handler offset */
   IFX_uintptr_t nOffset;
   /* list of allowed  handler prototypes.
      required for compilation check and do not used directly */
   /*lint -save
      -esym(754,pDrvNone)
      -esym(754,pDevNone)
      -esym(754,pChNone)
      -esym(754,pLLNone)
   */
   IFX_int32_t (*pDrvNone)(IFX_TAPI_DRV_CTX_t*);
   IFX_int32_t (*pDevNone)(TAPI_DEV*);
   IFX_int32_t (*pChNone)(TAPI_CHANNEL*);
   IFX_int32_t (**pLLNone)(IFX_TAPI_LL_CH_t*);
   /*lint -restore */
   TAPI_CH_HANDLER_ALLOW   (IFX_int32_t);
   TAPI_CH_HANDLER_ALLOW   (IFX_uint32_t);
   TAPI_DEV_HANDLER_ALLOW  (IFX_int32_t);
   TAPI_DEV_HANDLER_ALLOW  (IFX_uint32_t);
   TAPI_DRV_HANDLER_ALLOW  (IFX_int32_t);
   TAPI_DRV_HANDLER_ALLOW  (IFX_uint32_t);
   TAPI_LL_CH_HANDLER_ALLOW   (IFX_int32_t);
   TAPI_LL_CH_HANDLER_ALLOW   (IFX_uint32_t);
   TAPI_LL_DEV_HANDLER_ALLOW  (IFX_int32_t);
   TAPI_LL_DEV_HANDLER_ALLOW  (IFX_uint32_t);
/* IOCTL_HANDLER_TYPES_START */
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_CID_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_CID_MSG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_CID_RX_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_CID_RX_DATA_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_CID_RX_STATUS_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_COD_AMR_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_DECT_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_DECT_ENC_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_DTMF_RX_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_DTMF_RX_CFG_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_ENC_CFG_SET_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_ENC_ROOM_NOISE_DETECT_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_APOH_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_BAT_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_DIAL_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_DIAL_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_FLASH_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_HOOK_CFG_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_OSI_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_POLARITY_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_FXO_RING_STATUS_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_KPI_CH_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_BATTERY_VOLTAGE_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_HOOK_STATUS_GET_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_HOOK_VT_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_PHONE_DETECT_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_PHONE_DETECT_CFG_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_LINE_TYPE_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_MAP_DATA_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_MAP_DECT_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_MAP_PCM_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_MAP_PHONE_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_METER_BURST_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_METER_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_METER_START_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_METER_STATISTICS_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_NLT_CAPACITANCE_START_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_NLT_CAPACITANCE_STOP_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PCM_ACTIVATION_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PCM_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PCM_CFG_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PCM_HDLC_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PCM_LOOP_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_EV_GENERATE_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_EV_OOB_MFTD_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_MKI_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_MKI_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_PACKET_INDEX_GET_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_PACKET_INDEX_SET_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_STATISTICS_GET_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_STATISTICS_RESET_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_PREDEF_TONE_LEVEL_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_RING_CADENCE_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_RING_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_RING_CFG_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_TONE_CPTD_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_TONE_PLAY_t*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_WLEC_CFG_t const*);
   TAPI_CH_HANDLER_ALLOW (IFX_TAPI_WLEC_CFG_t*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_CAP_NR_t*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_CH_INIT_t const*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_DEV_START_CFG_t const*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_Error_t*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_PCM_IF_CFG_t const*);
   TAPI_DEV_HANDLER_ALLOW (IFX_TAPI_PKT_SRTP_CAP_GET_t*);
   TAPI_DRV_HANDLER_ALLOW (IFX_TAPI_EVENT_MULTI_t*);
   TAPI_DRV_HANDLER_ALLOW (IFX_TAPI_EVENT_t*);
   TAPI_HANDLER_ALLOW (IFX_TAPI_KPI_GRP_CFG_t const*);
   TAPI_HANDLER_ALLOW (IFX_TAPI_POLL_CONFIG_t const*);
   TAPI_HANDLER_ALLOW (IFX_TAPI_TONE_t const*);
   TAPI_HANDLER_ALLOW (IFX_TAPI_VERSION_t const*);
   TAPI_HANDLER_ALLOW (IFX_char_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_CALIBRATION_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_CALIBRATION_CFG_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_COD_ANNOUNCE_START_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_COD_MOS_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_COD_MOS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_COMTEL_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_CONTMEASUREMENT_GET_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_DECT_EC_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_DECT_STATISTICS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_DEC_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_ENC_AGC_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_FXO_LINE_MODE_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_GAIN_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_GAIN_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_GR909_RESULT_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_GR909_START_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_JB_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_JB_STATISTICS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_LINE_FEED_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_LINE_VOLUME_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_MAP_MON_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_MWL_ACTIVATION_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_MWL_ACTIVATION_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_NLT_CAPACITANCE_RESULT_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_NLT_CONFIGURATION_OL_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_NLT_CONFIGURATION_RMES_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_NLT_RESULT_GET_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_NLT_TEST_START_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PCM_MUTE_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PEAK_DETECT_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PEAK_DETECT_RESULT_GET_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_EV_GENERATE_ABCD_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_NET_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTCP_STATISTICS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTCP_XR_BLOCK_GET_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTP_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTP_EXT_STATISTICS_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTP_EXT_STATISTICS_GET_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_RTP_PT_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_PKT_VOLUME_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_SIG_DETECTION_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_DEMOD_DATA_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_FAX_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_FAX_CFG_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_FDP_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_FDP_CFG_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_MOD_DATA_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_SESS_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_SESS_STATISTICS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_STATUS_t*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_T38_TRACE_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_TEST_LOOP_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_TONE_MF_R2_CFG_t const*);
   TAPI_LL_CH_HANDLER_ALLOW (IFX_TAPI_VERSION_CH_ENTRY_t*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_CAP_LIST_t*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_CAP_t*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_COD_ANNOUNCE_BUFFER_FREE_t const*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_COD_ANNOUNCE_CFG_t const*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_T38_CAP_t*);
   TAPI_LL_DEV_HANDLER_ALLOW (IFX_TAPI_VERSION_DEV_ENTRY_t*);
/* IOCTL_HANDLER_TYPES_END */
#ifdef TAPI_FEAT_QOS
/* IOCTL_QOS_HANDLER_TYPES_START */
   TAPI_CH_HANDLER_ALLOW (QOS_INIT_SESSION const*);
   TAPI_CH_HANDLER_ALLOW (QOS_INIT_SESSION_ON_SOCKET const*);
/* IOCTL_QOS_HANDLER_TYPES_END */
#endif /* TAPI_FEAT_QOS */
} TAPI_Handler_t;

/** Entry for IOCtl handler */
struct TAPI_IOCtl_s {
   /** supported contexts */
   TAPI_CtxType_t nContext:4;
   /** kind of argument */
   TAPI_ArgKind_t nArgKind:4;
   /** mandatory device states */
   IFX_uint32_t nDevState :4;
   /** Reserved. */
   IFX_uint32_t nReserved :20;
   /** handle to the IOCtl handler */
   TAPI_Handler_t pHandler;
#ifdef DEBUG
   IFX_char_t info[128];
   IFX_uint16_t line;
#endif /* DEBUG */
};

/* ============================= */
/* Variable definition           */
/* ============================= */

#if defined (TAPI_DECLARE_IOCTL_HANDLERS_MAP)

#ifdef TAPI_FEAT_QOS
/**
   TAPI QOS ioctl command handler list

   \remarks
      !!!IMPORTANT!!!
      Never touch that data between 'IOCTL_QOS_HANDLERS_START'
        and 'IOCTL_QOS_HANDLERS_END' directly.
      Use 'drv_tapi_io.xml' and 'drv_tapi_qos_io.xml'
         with 'make ioctl' instead!
*/
const TAPI_IOCtl_t gQosIOCtls[] = {
/* IOCTL_QOS_HANDLERS_START */
   /* FIO_QOS_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_QOS_Start),
   /* FIO_QOS_ON_SOCKET_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_QOS_SessionOnSocketStart),
   /* FIO_QOS_ACTIVATE */ TAPI_HANDLER_UNSUPPORTED,
   /* FIO_QOS_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IFX_TAPI_QOS_Stop),
   /* FIO_QOS_CLEAN */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_NONE, TAPI_DS_NONE, IFX_TAPI_QOS_Clean)
/* IOCTL_QOS_HANDLERS_END */
};
#endif /* TAPI_FEAT_QOS */

/**
   TAPI ioctl command handler list

   \remarks
      !!!IMPORTANT!!!
      Never touch that data between 'IOCTL_HANDLERS_START'
        and 'IOCTL_HANDLERS_END' directly.
      Use 'drv_tapi_io.xml' and 'drv_tapi_qos_io.xml'
         with 'make ioctl' instead!
*/
const TAPI_IOCtl_t gIOCtls[] = {
/* IOCTL_HANDLERS_START */
   /* IFX_TAPI_CH_INIT */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, IFX_TAPI_Phone_Init),
   /* IFX_TAPI_DEV_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, IFX_TAPI_DeviceStart),
   /* IFX_TAPI_DEV_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_NONE, TAPI_DS_NONE, IFX_TAPI_DeviceStop),
   /* IFX_TAPI_LINE_FEED_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_Set_Linefeed),
   /* IFX_TAPI_LINE_FEED_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Line_Mode_Get)),
   /* IFX_TAPI_LINE_TYPE_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Set_LineType),
#if defined(TAPI_FEAT_ALM_LEC)
   /* IFX_TAPI_WLEC_PHONE_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_LecMode_Alm_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ALM_LEC) */
#if defined(TAPI_FEAT_ALM_LEC)
   /* IFX_TAPI_WLEC_PHONE_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_LecMode_Alm_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ALM_LEC) */
#if defined(TAPI_FEAT_PCM_LEC)
   /* IFX_TAPI_WLEC_PCM_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_LecMode_Pcm_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM_LEC) */
#if defined(TAPI_FEAT_PCM_LEC)
   /* IFX_TAPI_WLEC_PCM_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_LecMode_Pcm_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM_LEC) */
#if defined(TAPI_FEAT_DIAL)
   /* IFX_TAPI_LINE_HOOK_VT_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_Dial_SetValidationTime),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DIAL) */
   /* IFX_TAPI_PHONE_VOLUME_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Volume_Set)),
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_VOLUME_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (PCM.Volume_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
   /* IFX_TAPI_PHONE_RELATIVE_LEVEL_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.TxRxGain_Set)),
   /* IFX_TAPI_PHONE_RELATIVE_LEVEL_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.TxRxGain_Get)),
   /* IFX_TAPI_LINE_LEVEL_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Volume_High_Level)),
   /* IFX_TAPI_LINE_HOOK_STATUS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_HookstateGet),
#if defined(TAPI_FEAT_METERING)
   /* IFX_TAPI_METER_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Meter_Config),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_METERING) */
#if defined(TAPI_FEAT_METERING)
   /* IFX_TAPI_METER_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Meter_Start),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_METERING) */
#if defined(TAPI_FEAT_METERING)
   /* IFX_TAPI_METER_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_Phone_Meter_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_METERING) */
#if defined(TAPI_FEAT_METERING)
   /* IFX_TAPI_METER_BURST */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Meter_Burst),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_METERING) */
#if defined(TAPI_FEAT_METERING)
   /* IFX_TAPI_METER_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Meter_Stat),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_METERING) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_LEVEL_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Tone_Set_Level),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONETABLE)
   /* IFX_TAPI_TONE_TABLE_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_Phone_Tone_TableConf),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONETABLE) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Target_Tone_Play),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_LOCAL_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_Tone_Local_Play),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_NET_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_Tone_Net_Play),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_BUSY_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_Phone_Tone_Busy),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_RINGBACK_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_Phone_Tone_Ringback),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_DIALTONE_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_Phone_Tone_Dial),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_LOCAL_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_Tone_Local_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_NET_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_Tone_Net_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
#if defined(TAPI_FEAT_TONEGEN)
   /* IFX_TAPI_TONE_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Tone_Def_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_TONEGEN) */
   /* IFX_TAPI_SIG_DETECT_ENABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.MFTD_Enable)),
   /* IFX_TAPI_SIG_DETECT_DISABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.MFTD_Disable)),
#if defined(TAPI_FEAT_DTMF)
   /* IFX_TAPI_DTMF_RX_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DTMFR_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DTMF) */
#if defined(TAPI_FEAT_DTMF)
   /* IFX_TAPI_DTMF_RX_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DTMFR_Cfg_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DTMF) */
#if defined(TAPI_FEAT_CPTD)
   /* IFX_TAPI_TONE_CPTD_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DetectToneStart),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CPTD) */
#if defined(TAPI_FEAT_CPTD)
   /* IFX_TAPI_TONE_CPTD_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DetectToneStop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CPTD) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_RX_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CidRx_Start),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_RX_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CidRx_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_RX_STATUS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CidRx_Status),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_RX_DATA_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_Get_CidRxData),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_TX_INFO_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CID_Info_Tx),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_TX_INFO_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_Phone_CID_Stop_Tx),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_TX_SEQ_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CID_Seq_Tx),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
#if defined(TAPI_FEAT_CID)
   /* IFX_TAPI_CID_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_CID_SetConfig),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CID) */
   /* IFX_TAPI_PKT_AAL_CFG_SET */ TAPI_HANDLER_UNSUPPORTED,
   /* IFX_TAPI_PKT_AAL_PROFILE_SET */ TAPI_HANDLER_UNSUPPORTED,
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTP_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTP_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_RTP_OOB)
   /* IFX_TAPI_PKT_EV_OOB_DTMF_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_EVENT_PKT_EV_Oob_Dtmf_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RTP_OOB) */
#if defined(TAPI_FEAT_RTP_OOB)
   /* IFX_TAPI_PKT_EV_OOB_MFTD_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_EVENT_PKT_EV_Oob_Mftd_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RTP_OOB) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTP_PT_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTP_PayloadTable_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_NET_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.NET_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTCP_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTCP_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTCP_STATISTICS_RESET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTCP_Reset)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTCP_XR_BLOCK_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTCP_XR_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_RTP_OOB)
   /* IFX_TAPI_PKT_EV_GENERATE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_EVENT_PKT_EV_Generate),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RTP_OOB) */
   /* IFX_TAPI_PKT_EV_GENERATE_ABCD_CFG */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTP_EV_GenerateAbcdCfg)),
#if defined(TAPI_FEAT_PACKET)
   /* IFX_TAPI_PKT_FLUSH */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_PKT_Flush),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PACKET) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_JB_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.JB_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_JB_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.JB_Stat_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_JB_STATISTICS_RESET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.JB_Stat_Reset)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_MAP_PHONE_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_MapAdd),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_MAP_PHONE_REMOVE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_MapRemove),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_MAP_DATA_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Data_Channel_Add),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_MAP_DATA_REMOVE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Data_Channel_Remove),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_MAP_PCM_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_MapAdd),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_MAP_PCM_REMOVE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_MapRemove),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_MAP_DECT_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DECT_MapAdd),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_MAP_DECT_REMOVE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_DECT_MapRemove),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
   /* IFX_TAPI_MAP_MON_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (CON.Mon_Channel_Add)),
   /* IFX_TAPI_MAP_MON_REMOVE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (CON.Mon_Channel_Remove)),
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_COD_ENC_CFG_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_DEC_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.DEC_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.ENC_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.ENC_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_HOLD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_COD_ENC_Hold),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_DEC_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.DEC_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_DEC_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.DEC_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_COD_DEC_HP_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_COD_DEC_HP_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_COD_VOLUME_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.Volume_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_AGC_CFG */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.AGC_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_AGC_ENABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.AGC_Enable)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_ENC_VAD_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.VAD_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_ANNOUNCEMENTS)
   /* IFX_TAPI_COD_ANNOUNCE_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (COD.Ann_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ANNOUNCEMENTS) */
#if defined(TAPI_FEAT_ANNOUNCEMENTS)
   /* IFX_TAPI_COD_ANNOUNCE_BUFFER_FREE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (COD.Ann_Free)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ANNOUNCEMENTS) */
#if defined(TAPI_FEAT_ANNOUNCEMENTS)
   /* IFX_TAPI_COD_ANNOUNCE_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.Ann_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ANNOUNCEMENTS) */
#if defined(TAPI_FEAT_ANNOUNCEMENTS)
   /* IFX_TAPI_COD_ANNOUNCE_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.Ann_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_ANNOUNCEMENTS) */
#if defined(TAPI_FEAT_BABYPHONE)
   /* IFX_TAPI_ENC_ROOM_NOISE_DETECT_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_COD_ENC_Room_Noise_Start),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_BABYPHONE) */
#if defined(TAPI_FEAT_BABYPHONE)
   /* IFX_TAPI_ENC_ROOM_NOISE_DETECT_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_COD_ENC_Room_Noise_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_BABYPHONE) */
#if defined(TAPI_FEAT_KPI)
   /* IFX_TAPI_KPI_CH_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_KPI_ChCfgSet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_KPI) */
#if defined(TAPI_FEAT_KPI)
   /* IFX_TAPI_KPI_GRP_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_POINTER, TAPI_DS_NONE, IFX_TAPI_KPI_GrpCfgSet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_KPI) */
   /* IFX_TAPI_VERSION_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_Phone_Get_Version),
   /* IFX_TAPI_DEBUG_REPORT_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_INTEGER, TAPI_DS_NONE, TAPI_DebugReportSet),
   /* IFX_TAPI_VERSION_CHECK */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_Phone_Check_Version),
   /* IFX_TAPI_CAP_NR */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, IFX_TAPI_Cap_Nr_Get),
   /* IFX_TAPI_CAP_LIST */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (CAP_List_Get)),
   /* IFX_TAPI_CAP_NLIST */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (CAP_List_Get)),
   /* IFX_TAPI_CAP_CHECK */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (CAP_Check)),
   /* IFX_TAPI_LASTERR */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_Last_Err_Get),
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_Ring_SetConfig),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_CADENCE_HR_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_Ring_SetCadenceHighRes),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_Ring_GetConfig),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IFX_TAPI_Ring_DoBlocking),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_MAX_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, IFX_TAPI_Ring_SetMaxRings),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_CADENCE_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, IFX_TAPI_Ring_SetCadence),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IFX_TAPI_Ring_Start),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_RINGENGINE)
   /* IFX_TAPI_RING_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IFX_TAPI_Ring_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_RINGENGINE) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_IF_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_IF_Set_Config),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_Set_Config),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_Get_Config),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_ACTIVATION_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_PCM_Set_Activation),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_ACTIVATION_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_Get_Activation),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_HDLC)
   /* IFX_TAPI_PCM_HDLC_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_HDLC_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_HDLC) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_LOOP_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_Phone_PCM_Loop_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_DEC_HP_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Phone_PCM_DEC_HP_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_SESS_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_SESS_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_SESS_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Stat_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_CAP_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Cap_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Cfg_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_Cfg_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_FDP_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_FDP_Cfg_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_FDP_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_FDP_Cfg_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_STACK)
   /* IFX_TAPI_T38_TRACE_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.FAX_TraceSet)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_STACK) */
#if defined(TAPI_FEAT_FAX_T38)
   /* IFX_TAPI_T38_MOD_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.T38_Mod_Enable)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_T38) */
#if defined(TAPI_FEAT_FAX_T38)
   /* IFX_TAPI_T38_DEMOD_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.T38_DeMod_Enable)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_T38) */
#if defined(TAPI_FEAT_FAX_T38)
   /* IFX_TAPI_T38_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.T38_Datapump_Disable)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_T38) */
#if defined(TAPI_FEAT_FAX_T38)
   /* IFX_TAPI_T38_STATUS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.T38_Status_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FAX_T38) */
   /* IFX_TAPI_TEST_HOOKGEN */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_Test_Hook_Gen),
   /* IFX_TAPI_TEST_LOOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.TestLoop)),
   /* IFX_TAPI_EVENT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DRV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_Event_Get),
   /* IFX_TAPI_EVENT_ENABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DRV, TAPI_ARG_POINTER, TAPI_DS_NONE, IOCTL_TAPI_EventEnable),
   /* IFX_TAPI_EVENT_DISABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DRV, TAPI_ARG_POINTER, TAPI_DS_NONE, IOCTL_TAPI_EventDisable),
   /* IFX_TAPI_EVENT_MULTI_ENABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DRV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_EventMultiEnable),
   /* IFX_TAPI_EVENT_MULTI_DISABLE */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DRV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_EventMultiDisable),
#if defined(TAPI_FEAT_POLL)
   /* IFX_TAPI_POLL_CONFIG */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_IrqPollConf),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_POLL) */
#if defined(TAPI_FEAT_POLL)
   /* IFX_TAPI_POLL_DEV_ADD */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_NONE, TAPI_DS_NONE, TAPI_PoolDevAdd),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_POLL) */
#if defined(TAPI_FEAT_POLL)
   /* IFX_TAPI_POLL_DEV_REM */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_NONE, TAPI_DS_NONE, TAPI_PoolDevRem),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_POLL) */
#if defined(TAPI_FEAT_POLL)
   /* IFX_TAPI_POLL_TEST */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_NONE, TAPI_ARG_NONE, TAPI_DS_NONE, TAPI_Poll_Test),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_POLL) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_DIAL_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Dial_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_FLASH_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Flash_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_OSI_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_OSI_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_DIAL_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Dial_Start),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_DIAL_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.DTMFG_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_HOOK_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, IFX_TAPI_FXO_Hook_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_FLASH_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IFX_TAPI_FXO_Flash_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_BAT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Bat_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_HOOK_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Hook_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_APOH_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Apoh_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_RING_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Ring_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_POLARITY_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_FXO_Polarity_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_FXO)
   /* IFX_TAPI_FXO_LINE_MODE_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.FXO_LineModeSet)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_FXO) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_ACTIVATION_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, IFX_TAPI_DECT_Activation_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_DECT_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_ENC_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_DECT_Enc_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_EC_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (DECT.EC_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_VOLUME_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (DECT.Gain_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_DECT_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (DECT.Statistic)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_TONE_DECT_PLAY */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_DECT_Tone_Play),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_DECT)
   /* IFX_TAPI_TONE_DECT_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_DECT_Tone_Stop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_DECT) */
#if defined(TAPI_FEAT_MWL)
   /* IFX_TAPI_MWL_ACTIVATION_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.MWL_Activation_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MWL) */
#if defined(TAPI_FEAT_MWL)
   /* IFX_TAPI_MWL_ACTIVATION_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.MWL_Activation_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MWL) */
#if defined(TAPI_FEAT_PEAKD)
   /* IFX_TAPI_PEAK_DETECT_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.PEAKD_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PEAKD) */
#if defined(TAPI_FEAT_PEAKD)
   /* IFX_TAPI_PEAK_DETECT_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.PEAKD_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PEAKD) */
#if defined(TAPI_FEAT_PEAKD)
   /* IFX_TAPI_PEAK_DETECT_RESULT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.PEAKD_Result)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PEAKD) */
#if defined(TAPI_FEAT_MF_R2)
   /* IFX_TAPI_TONE_MF_R2_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.MF_R2_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MF_R2) */
#if defined(TAPI_FEAT_MF_R2)
   /* IFX_TAPI_TONE_MF_R2_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (SIG.MF_R2_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MF_R2) */
#if defined(TAPI_FEAT_CALIBRATION)
   /* IFX_TAPI_CALIBRATION_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Calibration_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CALIBRATION) */
#if defined(TAPI_FEAT_CALIBRATION)
   /* IFX_TAPI_CALIBRATION_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Calibration_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CALIBRATION) */
#if defined(TAPI_FEAT_CALIBRATION)
   /* IFX_TAPI_CALIBRATION_RESULTS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Calibration_Results_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CALIBRATION) */
#if defined(TAPI_FEAT_CALIBRATION)
   /* IFX_TAPI_CALIBRATION_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Calibration_Set)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CALIBRATION) */
#if defined(TAPI_FEAT_CALIBRATION)
   /* IFX_TAPI_CALIBRATION_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.Calibration_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CALIBRATION) */
   /* IFX_TAPI_COMTEL_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.ComTel_Start)),
#if defined(TAPI_FEAT_CONT_MEAS)
   /* IFX_TAPI_CONTMEASUREMENT_REQ */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.ContMeasReq)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CONT_MEAS) */
#if defined(TAPI_FEAT_CONT_MEAS)
   /* IFX_TAPI_CONTMEASUREMENT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.ContMeasGet)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CONT_MEAS) */
#if defined(TAPI_FEAT_CONT_MEAS)
   /* IFX_TAPI_CONTMEASUREMENT_RESET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.ContMeasReset)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CONT_MEAS) */
#if defined(TAPI_FEAT_CAP_MEAS)
   /* IFX_TAPI_LINE_MEASURE_CAPACITANCE_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IOCTL_TAPI_PPD_CapMeasStart),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CAP_MEAS) */
#if defined(TAPI_FEAT_CAP_MEAS)
   /* IFX_TAPI_LINE_MEASURE_CAPACITANCE_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, IOCTL_TAPI_PPD_CapMeasStop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CAP_MEAS) */
   /* IFX_TAPI_LINE_BATTERY_VOLTAGE_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LineBatteryVoltageGet),
   /* IFX_TAPI_LINE_BATTERY_VOLTAGE_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_INTEGER, TAPI_DS_INIT, TAPI_LineBatteryVoltageSet),
#if defined(TAPI_FEAT_NLT)
   /* IFX_TAPI_NLT_TEST_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (NLT.NLT_test_start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_NLT) */
#if defined(TAPI_FEAT_NLT)
   /* IFX_TAPI_NLT_RESULT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (NLT.NLT_result_get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_NLT) */
   /* IFX_TAPI_NLT_CONFIGURATION_OL_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.NLT_OLConfigSet)),
   /* IFX_TAPI_NLT_CONFIGURATION_OL_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.NLT_OLConfigGet)),
   /* IFX_TAPI_NLT_CONFIGURATION_RMES_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.NLT_RmesConfigSet)),
#if defined(TAPI_FEAT_CAP_MEAS)
   /* IFX_TAPI_NLT_CAPACITANCE_RESULT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.NLT_capacitance_result_get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CAP_MEAS) */
#if defined(TAPI_FEAT_CAP_MEAS)
   /* IFX_TAPI_NLT_CAPACITANCE_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IOCTL_TAPI_PPD_NLTCapMeasStart),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CAP_MEAS) */
#if defined(TAPI_FEAT_CAP_MEAS)
   /* IFX_TAPI_NLT_CAPACITANCE_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IOCTL_TAPI_PPD_NLTCapMeasStop),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_CAP_MEAS) */
   /* IFX_TAPI_VERSION_DEV_ENTRY_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, TAPI_LL_HANDLER (VersionDevEntryGet)),
   /* IFX_TAPI_VERSION_CH_ENTRY_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.VersionChEntry_Get)),
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTP_EXT_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTP_Ext_Stat_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_VOICE)
   /* IFX_TAPI_PKT_RTP_EXT_STATISTICS_CFG */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.RTP_Ext_Stat_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_VOICE) */
#if defined(TAPI_FEAT_GR909)
   /* IFX_TAPI_GR909_START */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.GR909_Start)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_GR909) */
#if defined(TAPI_FEAT_GR909)
   /* IFX_TAPI_GR909_STOP */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_NONE, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.GR909_Stop)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_GR909) */
#if defined(TAPI_FEAT_GR909)
   /* IFX_TAPI_GR909_RESULT */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (ALM.GR909_Result)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_GR909) */
#if defined(TAPI_FEAT_MOS_LQE)
   /* IFX_TAPI_COD_MOS_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.MOS_Cfg)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MOS_LQE) */
#if defined(TAPI_FEAT_MOS_LQE)
   /* IFX_TAPI_COD_MOS_RESULT_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (COD.MOS_Result_Get)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_MOS_LQE) */
#if defined(TAPI_FEAT_PHONE_DETECTION)
   /* IFX_TAPI_LINE_PHONE_DETECT_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_PPD_Cfg_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PHONE_DETECTION) */
#if defined(TAPI_FEAT_PHONE_DETECTION)
   /* IFX_TAPI_LINE_PHONE_DETECT_CFG_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_PPD_Cfg_Get),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PHONE_DETECTION) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_CfgSet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_MKI_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_MKI_Set),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_MKI_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_MKI_CfgSet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_CAP_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_DEV, TAPI_ARG_POINTER, TAPI_DS_NONE, IFX_TAPI_SRTP_CapGet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_STATISTICS_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_StatGet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_STATISTICS_RESET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_StatReset),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_PACKET_INDEX_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_PckIdxSet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_SRTP)
   /* IFX_TAPI_PKT_SRTP_PACKET_INDEX_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_SRTP_PckIdxGet),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_SRTP) */
#if defined(TAPI_FEAT_PCM)
   /* IFX_TAPI_PCM_MUTE_CFG_SET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, TAPI_LL_HANDLER (PCM.Mute)),
#else
   TAPI_HANDLER_UNSUPPORTED,
#endif /* defined(TAPI_FEAT_PCM) */
#if defined(TAPI_FEAT_AMR)
   /* IFX_TAPI_COD_AMR_GET */ TAPI_HANDLER_ADD (TAPI_IOC_CTX_CH, TAPI_ARG_POINTER, TAPI_DS_INIT, IFX_TAPI_COD_AMR_Get)
#else
   TAPI_HANDLER_UNSUPPORTED
#endif /* defined(TAPI_FEAT_AMR) */
/* IOCTL_HANDLERS_END */
};

#endif /* defined (TAPI_DECLARE_IOCTL_HANDLERS_MAP) */

/* ============================= */
/* Function prototypes           */
/* ============================= */


#endif /* DRV_TAPI_IOCTL_HANDLERS_H */
