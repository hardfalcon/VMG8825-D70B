/******************************************************************************

                               Copyright  2008
                            Infineon Technologies AG
                     Am Campeon 1-12; 81726 Munich, Germany

  For licensing information, see the file 'LICENSE' in the root folder of
  this software module.

******************************************************************************/

HOW TO PREPARE COMPILATION
--------------------------

Provide your own LINUX build environment project setup:
- your own LINUX kernel include path

HOW TO COMPILE
--------------
execute the following commands on a shell in your build directory:

CONFIGURE for PPC:
------------------
$ <your package dir>/configure --build=i686-pc-linux --host=ppc_8xx\
							   --enable-kernelincl=/your/own/linux/include/path



Dynamic Library - version handling
----------------------------------
The version information given with the flag "-version-info" is used by the
libtool and dynamic linker to ensure the compatibility of different library versions.
Note:
   Never try to set the interface numbers so that they correspond to the release
   number of your package.

Short hints and tips:
---------------------
For detailed information please have a look to the official libtool documentation.

-version-info c:r:a
c: current  - The most recent interface number that this library implements.
r: revision - The implementation number of the current interface.
a: age      - support range from number current - age to current.

The "-version-info" flag accepts an argument of the form ‘current[:revision[:age]]’.
So, passing "-version-info 3:12:1" sets current to 3, revision to 12, and age to 1.

If either revision or age are omitted, they default to 0. Also note that age must be less
than or equal to the current interface number.

Here are a set of rules to help you update your library version information:
1. Start with version information of "0:0:0" for each libtool library.
2. Update the version information only immediately before a public release of your software.
   More frequent updates are unnecessary, and only guarantee that the current
   interface number gets larger faster.
3. If the library source code has changed at all since the last update, then increment
   revision ("c:r:a" becomes "c:r + 1:a").
4. If any interfaces have been added, removed, or changed since the last update, increment
   current, and set revision to 0.
5. If any interfaces have been added since the last public release, then increment age.
6. If any interfaces have been removed since the last public release, then set age to 0.

